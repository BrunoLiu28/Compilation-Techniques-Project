
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'start_blockleftORleftANDleftEQUALNOT_EQUALleftGREATER_THANGREATER_THAN_EQUALLESS_THANLESS_THAN_EQUALleftPLUSMINUSleftTIMESDIVIDEMODrightPOWERrightNOTleftLPARENRPARENAND ASSIGN BOOL_LITERAL BOOL_TYPE COLON COMMA COMMENT DIVIDE ELSE EQUAL FALSE FLOAT_LITERAL FLOAT_TYPE FUNCTION GREATER_THAN GREATER_THAN_EQUAL ID IF INTEGER_LITERAL INT_TYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN LSQUARE MINUS MOD NOT NOT_EQUAL OR PLUS POWER RBRACE RPAREN RSQUARE SEMICOLON STRING_LITERAL STRING_TYPE THEN TIMES TRUE VAL VAR VOID_TYPE WHILEstart_block : constant_declaration\n            | variable_declaration\n            | function_declaration\n            | constant_declaration : VAL ID COLON type ASSIGN expression SEMICOLONvariable_declaration : VAR ID COLON type ASSIGN expression SEMICOLONfunction_declaration : FUNCTION ID LPAREN function_param_list RPAREN COLON type SEMICOLON\n    |  FUNCTION ID LPAREN function_param_list RPAREN COLON type LBRACE function_body RBRACEfunction_param_list : parameter COMMA function_param_list\n    | parameter parameter : VAL ID COLON type\n    | VAR ID COLON typefunction_call : ID LPAREN function_param_list_call RPAREN SEMICOLON\n    function_param_list_call : ID COMMA function_param_list_call\n    | IDfunction_body : block_sequenceblock_sequence : block SEMICOLON block_sequence\n\t | blockblock : constant_declaration\n     | variable_declaration\n\t | if_block\n\t | while_block\n\t | function_call\n\t |\n\tif_block : IF expression LBRACE block RBRACE LBRACE ELSE block RBRACE\n\t| IF expression LBRACE block RBRACE \n\twhile_block : WHILE expression LBRACE block RBRACEtype : INT_TYPE\n            | FLOAT_TYPE\n            | STRING_TYPE\n            | BOOL_TYPEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression POWER expression\n                  | expression EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN expression\n                  | expression GREATER_THAN_EQUAL expression\n                  | expression LESS_THAN expression\n                  | expression LESS_THAN_EQUAL expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expression\n                  | INTEGER_LITERAL\n                  | FLOAT_LITERAL\n                  | STRING_LITERAL\n                  | BOOL_LITERAL\n                  | ID\n                  | LPAREN expression RPAREN'
    
_lr_action_items = {'$end':([0,1,2,3,4,43,60,79,93,],[-4,0,-1,-2,-3,-5,-6,-7,-8,]),'VAL':([0,13,27,80,94,100,101,111,],[5,22,22,5,5,5,5,5,]),'VAR':([0,13,27,80,94,100,101,111,],[6,23,23,6,6,6,6,6,]),'FUNCTION':([0,],[7,]),'ID':([5,6,7,22,23,24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,80,90,91,92,94,100,101,102,111,],[8,9,10,28,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,81,30,30,97,81,81,81,97,81,]),'COLON':([8,9,26,28,29,],[11,12,39,41,42,]),'LPAREN':([10,24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,81,90,91,],[13,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,92,37,37,]),'INT_TYPE':([11,12,39,41,42,],[15,15,15,15,15,]),'FLOAT_TYPE':([11,12,39,41,42,],[16,16,16,16,16,]),'STRING_TYPE':([11,12,39,41,42,],[17,17,17,17,17,]),'BOOL_TYPE':([11,12,39,41,42,],[18,18,18,18,18,]),'ASSIGN':([14,15,16,17,18,19,],[24,-28,-29,-30,-31,25,]),'SEMICOLON':([15,16,17,18,30,31,33,34,35,36,38,43,58,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,84,85,86,87,88,89,94,103,107,108,109,113,],[-28,-29,-30,-31,-51,43,-47,-48,-49,-50,60,-5,-46,-6,79,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-52,-24,94,-19,-20,-21,-22,-23,-24,107,-13,-26,-27,-25,]),'LBRACE':([15,16,17,18,30,33,34,35,36,58,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,108,],[-28,-29,-30,-31,-51,-47,-48,-49,-50,-46,80,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-52,100,101,110,]),'COMMA':([15,16,17,18,21,62,63,97,],[-28,-29,-30,-31,27,-11,-12,102,]),'RPAREN':([15,16,17,18,20,21,30,33,34,35,36,40,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,97,98,106,],[-28,-29,-30,-31,26,-10,-51,-47,-48,-49,-50,-9,-46,78,-11,-12,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-52,-15,103,-14,]),'NOT':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'INTEGER_LITERAL':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOAT_LITERAL':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'STRING_LITERAL':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'BOOL_LITERAL':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PLUS':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,44,-47,-48,-49,-50,44,-46,44,-32,-33,-34,-35,-36,-37,44,44,44,44,44,44,44,44,-52,44,44,]),'MINUS':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,45,-47,-48,-49,-50,45,-46,45,-32,-33,-34,-35,-36,-37,45,45,45,45,45,45,45,45,-52,45,45,]),'TIMES':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,46,-47,-48,-49,-50,46,-46,46,46,46,-34,-35,-36,-37,46,46,46,46,46,46,46,46,-52,46,46,]),'DIVIDE':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,47,-47,-48,-49,-50,47,-46,47,47,47,-34,-35,-36,-37,47,47,47,47,47,47,47,47,-52,47,47,]),'MOD':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,48,-47,-48,-49,-50,48,-46,48,48,48,-34,-35,-36,-37,48,48,48,48,48,48,48,48,-52,48,48,]),'POWER':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,49,-47,-48,-49,-50,49,-46,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-52,49,49,]),'EQUAL':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,50,-47,-48,-49,-50,50,-46,50,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,50,50,-52,50,50,]),'NOT_EQUAL':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,51,-47,-48,-49,-50,51,-46,51,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,51,51,-52,51,51,]),'GREATER_THAN':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,52,-47,-48,-49,-50,52,-46,52,-32,-33,-34,-35,-36,-37,52,52,-40,-41,-42,-43,52,52,-52,52,52,]),'GREATER_THAN_EQUAL':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,53,-47,-48,-49,-50,53,-46,53,-32,-33,-34,-35,-36,-37,53,53,-40,-41,-42,-43,53,53,-52,53,53,]),'LESS_THAN':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,54,-47,-48,-49,-50,54,-46,54,-32,-33,-34,-35,-36,-37,54,54,-40,-41,-42,-43,54,54,-52,54,54,]),'LESS_THAN_EQUAL':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,55,-47,-48,-49,-50,55,-46,55,-32,-33,-34,-35,-36,-37,55,55,-40,-41,-42,-43,55,55,-52,55,55,]),'AND':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,56,-47,-48,-49,-50,56,-46,56,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,56,-52,56,56,]),'OR':([30,31,33,34,35,36,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,],[-51,57,-47,-48,-49,-50,57,-46,57,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-52,57,57,]),'RBRACE':([43,60,80,82,83,84,85,86,87,88,89,94,99,100,101,104,105,107,108,109,111,112,113,],[-5,-6,-24,93,-16,-18,-19,-20,-21,-22,-23,-24,-17,-24,-24,108,109,-13,-26,-27,-24,113,-25,]),'IF':([80,94,100,101,111,],[90,90,90,90,90,]),'WHILE':([80,94,100,101,111,],[91,91,91,91,91,]),'ELSE':([110,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start_block':([0,],[1,]),'constant_declaration':([0,80,94,100,101,111,],[2,85,85,85,85,85,]),'variable_declaration':([0,80,94,100,101,111,],[3,86,86,86,86,86,]),'function_declaration':([0,],[4,]),'type':([11,12,39,41,42,],[14,19,61,62,63,]),'function_param_list':([13,27,],[20,40,]),'parameter':([13,27,],[21,21,]),'expression':([24,25,32,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,90,91,],[31,38,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,96,]),'function_body':([80,],[82,]),'block_sequence':([80,94,],[83,99,]),'block':([80,94,100,101,111,],[84,84,104,105,112,]),'if_block':([80,94,100,101,111,],[87,87,87,87,87,]),'while_block':([80,94,100,101,111,],[88,88,88,88,88,]),'function_call':([80,94,100,101,111,],[89,89,89,89,89,]),'function_param_list_call':([92,102,],[98,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start_block","S'",1,None,None,None),
  ('start_block -> constant_declaration','start_block',1,'p_start_block','rules.py',22),
  ('start_block -> variable_declaration','start_block',1,'p_start_block','rules.py',23),
  ('start_block -> function_declaration','start_block',1,'p_start_block','rules.py',24),
  ('start_block -> <empty>','start_block',0,'p_start_block','rules.py',25),
  ('constant_declaration -> VAL ID COLON type ASSIGN expression SEMICOLON','constant_declaration',7,'p_constant_declaration','rules.py',31),
  ('variable_declaration -> VAR ID COLON type ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','rules.py',36),
  ('function_declaration -> FUNCTION ID LPAREN function_param_list RPAREN COLON type SEMICOLON','function_declaration',8,'p_function_declaration','rules.py',41),
  ('function_declaration -> FUNCTION ID LPAREN function_param_list RPAREN COLON type LBRACE function_body RBRACE','function_declaration',10,'p_function_declaration','rules.py',42),
  ('function_param_list -> parameter COMMA function_param_list','function_param_list',3,'p_function_param_list','rules.py',50),
  ('function_param_list -> parameter','function_param_list',1,'p_function_param_list','rules.py',51),
  ('parameter -> VAL ID COLON type','parameter',4,'p_parameter','rules.py',58),
  ('parameter -> VAR ID COLON type','parameter',4,'p_parameter','rules.py',59),
  ('function_call -> ID LPAREN function_param_list_call RPAREN SEMICOLON','function_call',5,'p_function_call','rules.py',64),
  ('function_param_list_call -> ID COMMA function_param_list_call','function_param_list_call',3,'p_function_param_list_call','rules.py',69),
  ('function_param_list_call -> ID','function_param_list_call',1,'p_function_param_list_call','rules.py',70),
  ('function_body -> block_sequence','function_body',1,'p_function_body','rules.py',78),
  ('block_sequence -> block SEMICOLON block_sequence','block_sequence',3,'p_block_sequence','rules.py',82),
  ('block_sequence -> block','block_sequence',1,'p_block_sequence','rules.py',83),
  ('block -> constant_declaration','block',1,'p_block','rules.py',90),
  ('block -> variable_declaration','block',1,'p_block','rules.py',91),
  ('block -> if_block','block',1,'p_block','rules.py',92),
  ('block -> while_block','block',1,'p_block','rules.py',93),
  ('block -> function_call','block',1,'p_block','rules.py',94),
  ('block -> <empty>','block',0,'p_block','rules.py',95),
  ('if_block -> IF expression LBRACE block RBRACE LBRACE ELSE block RBRACE','if_block',9,'p_if_block','rules.py',101),
  ('if_block -> IF expression LBRACE block RBRACE','if_block',5,'p_if_block','rules.py',102),
  ('while_block -> WHILE expression LBRACE block RBRACE','while_block',5,'p_while_block','rules.py',110),
  ('type -> INT_TYPE','type',1,'p_type','rules.py',116),
  ('type -> FLOAT_TYPE','type',1,'p_type','rules.py',117),
  ('type -> STRING_TYPE','type',1,'p_type','rules.py',118),
  ('type -> BOOL_TYPE','type',1,'p_type','rules.py',119),
  ('expression -> expression PLUS expression','expression',3,'p_expression','rules.py',123),
  ('expression -> expression MINUS expression','expression',3,'p_expression','rules.py',124),
  ('expression -> expression TIMES expression','expression',3,'p_expression','rules.py',125),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','rules.py',126),
  ('expression -> expression MOD expression','expression',3,'p_expression','rules.py',127),
  ('expression -> expression POWER expression','expression',3,'p_expression','rules.py',128),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','rules.py',129),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','rules.py',130),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','rules.py',131),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','rules.py',132),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','rules.py',133),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','rules.py',134),
  ('expression -> expression AND expression','expression',3,'p_expression','rules.py',135),
  ('expression -> expression OR expression','expression',3,'p_expression','rules.py',136),
  ('expression -> NOT expression','expression',2,'p_expression','rules.py',137),
  ('expression -> INTEGER_LITERAL','expression',1,'p_expression','rules.py',138),
  ('expression -> FLOAT_LITERAL','expression',1,'p_expression','rules.py',139),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','rules.py',140),
  ('expression -> BOOL_LITERAL','expression',1,'p_expression','rules.py',141),
  ('expression -> ID','expression',1,'p_expression','rules.py',142),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','rules.py',143),
]
