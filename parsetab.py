
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftCOMMArightASSIGNleftORleftANDnonassocEQUALNOT_EQUALnonassocGREATER_THANGREATER_THAN_EQUALLESS_THANLESS_THAN_EQUALleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSrightPOWERrightNOTleftLPARENRPARENAND ASSIGN BOOL_LITERAL BOOL_TYPE CHAR_LITERAL CHAR_TYPE COLON COMMA COMMENT DIVIDE ELSE EQUAL FLOAT_LITERAL FLOAT_TYPE FROM FUNCTION GREATER_THAN GREATER_THAN_EQUAL ID IF IMPORT INTEGER_LITERAL INT_TYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN LSQUARE MAIN MINUS MOD NOT NOT_EQUAL OR PLUS POWER RBRACE RPAREN RSQUARE SEMICOLON STRING_LITERAL STRING_TYPE TIMES VAL VAR VOID_TYPE WHILEprogram : main_block_sequence main_block_sequence : main_block main_block_sequence\n\t                        | main_blockcomment : COMMENT STRING_LITERALimport_statement : FROM STRING_LITERAL IMPORT ID_LIST SEMICOLON\n                        | FROM STRING_LITERAL IMPORT TIMES SEMICOLONID_LIST : ID COMMA ID_LIST\n               | IDmain_block : constant_declaration\n     | variable_declaration \n     | var_const_update\n\t | function_declaration \n     | main_function\n     | comment\n     | import_statement\n\tconstant_declaration : VAL ID COLON types ASSIGN expression SEMICOLONvariable_declaration : VAR ID COLON types ASSIGN expression SEMICOLONvar_const_update :  ID ASSIGN expression SEMICOLON\n                        | arrayaccess ASSIGN expression SEMICOLONfunction_declaration : FUNCTION ID LPAREN function_param_list RPAREN COLON types SEMICOLON\n    |  FUNCTION ID LPAREN function_param_list RPAREN COLON types LBRACE function_body RBRACEmain_function : FUNCTION MAIN LPAREN function_param_list RPAREN LBRACE function_body RBRACEfunction_param_list : function_param_list_aux\n                           |function_param_list_aux : parameter COMMA function_param_list_aux\n                            | parameter parameter : VAL ID COLON types\n                  | VAR ID COLON typesfunction_call : ID LPAREN function_param_list_call RPAREN \n                     | ID LPAREN RPAREN \n    function_param_list_call : expression COMMA function_param_list_call\n                                | expressionfunction_body : block_sequenceblock_sequence : block block_sequence\n\t | blockblock : constant_declaration\n     | variable_declaration \n     | var_const_update\n\t | if_block\n\t | while_block\n\t | function_call SEMICOLON\n     | comment\n\tif_block : IF expression LBRACE block_sequence RBRACE ELSE LBRACE block_sequence RBRACE\n\t            | IF expression LBRACE block_sequence RBRACE \n\twhile_block : WHILE expression LBRACE block_sequence RBRACEtypes : defaulttype\n            | LSQUARE arraytype RSQUAREdefaulttype : INT_TYPE\n            | FLOAT_TYPE\n            | STRING_TYPE\n            | BOOL_TYPE\n            | VOID_TYPE\n            | CHAR_TYPEarraytype : LSQUARE arraytype RSQUARE\n            | INT_TYPE\n            | FLOAT_TYPE\n            | STRING_TYPE\n            | BOOL_TYPE\n            | VOID_TYPE\n            expression : ID arrayaccess : ID LSQUARE expression RSQUARE arrayaccess2 \n                    | function_call LSQUARE expression RSQUARE arrayaccess2arrayaccess2 : LSQUARE expression RSQUARE arrayaccess2\n                    | expression : INTEGER_LITERAL\n                  | MINUS INTEGER_LITERAL %prec UMINUSexpression : FLOAT_LITERAL\n                  | MINUS FLOAT_LITERAL %prec UMINUSexpression : STRING_LITERALexpression : BOOL_LITERALexpression : CHAR_LITERALexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression POWER expression\n                  | expression EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN expression\n                  | expression GREATER_THAN_EQUAL expression\n                  | expression LESS_THAN expression\n                  | expression LESS_THAN_EQUAL expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expression\n                  | function_call\n                  | arrayaccess\n                  | LPAREN expression RPAREN'
    
_lr_action_items = {'VAL':([0,3,4,5,6,7,8,9,10,28,50,51,63,86,125,129,130,142,144,147,153,154,155,156,157,158,160,165,166,167,169,173,174,175,178,179,181,183,],[11,11,-9,-10,-11,-12,-13,-14,-15,-4,90,90,-18,-19,90,-5,-6,11,-16,-17,11,-36,-37,-38,-39,-40,-42,-20,11,-22,-41,11,11,-21,-44,-45,11,-43,]),'VAR':([0,3,4,5,6,7,8,9,10,28,50,51,63,86,125,129,130,142,144,147,153,154,155,156,157,158,160,165,166,167,169,173,174,175,178,179,181,183,],[13,13,-9,-10,-11,-12,-13,-14,-15,-4,91,91,-18,-19,91,-5,-6,13,-16,-17,13,-36,-37,-38,-39,-40,-42,-20,13,-22,-41,13,13,-21,-44,-45,13,-43,]),'ID':([0,3,4,5,6,7,8,9,10,11,13,15,21,22,23,25,28,30,40,43,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,86,90,91,97,120,123,129,130,131,142,144,147,153,154,155,156,157,158,160,162,163,165,166,167,169,173,174,175,178,179,181,183,],[12,12,-9,-10,-11,-12,-13,-14,-15,20,24,26,32,32,32,32,-4,32,32,32,95,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-19,126,127,32,32,32,-5,-6,95,161,-16,-17,161,-36,-37,-38,-39,-40,-42,32,32,-20,161,-22,-41,161,161,-21,-44,-45,161,-43,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,28,63,86,129,130,144,147,165,167,175,],[15,15,-9,-10,-11,-12,-13,-14,-15,-4,-18,-19,-5,-6,-16,-17,-20,-22,-21,]),'COMMENT':([0,3,4,5,6,7,8,9,10,28,63,86,129,130,142,144,147,153,154,155,156,157,158,160,165,166,167,169,173,174,175,178,179,181,183,],[16,16,-9,-10,-11,-12,-13,-14,-15,-4,-18,-19,-5,-6,16,-16,-17,16,-36,-37,-38,-39,-40,-42,-20,16,-22,-41,16,16,-21,-44,-45,16,-43,]),'FROM':([0,3,4,5,6,7,8,9,10,28,63,86,129,130,144,147,165,167,175,],[17,17,-9,-10,-11,-12,-13,-14,-15,-4,-18,-19,-5,-6,-16,-17,-20,-22,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,19,28,63,86,129,130,144,147,165,167,175,],[0,-1,-3,-9,-10,-11,-12,-13,-14,-15,-2,-4,-18,-19,-5,-6,-16,-17,-20,-22,-21,]),'ASSIGN':([12,14,54,55,57,58,59,60,61,62,82,85,96,121,132,135,146,161,164,],[21,25,97,-46,-48,-49,-50,-51,-52,-53,-64,123,-64,-61,-62,-47,-64,21,-63,]),'LSQUARE':([12,18,31,32,41,46,48,56,82,83,96,98,138,140,141,146,159,161,],[22,30,56,22,30,-30,56,98,120,-29,120,98,56,56,56,120,30,22,]),'LPAREN':([12,21,22,23,25,26,27,30,32,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,161,162,163,],[23,43,43,43,43,50,51,43,23,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,23,43,43,]),'MAIN':([15,],[27,]),'STRING_LITERAL':([16,17,21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[28,29,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'COLON':([20,24,124,126,127,],[31,48,138,140,141,]),'INTEGER_LITERAL':([21,22,23,25,30,35,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[34,34,34,34,34,78,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MINUS':([21,22,23,25,30,32,33,34,36,37,38,39,40,41,42,43,44,46,47,49,53,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,96,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,132,133,136,137,146,162,163,164,170,171,],[35,35,35,35,35,-60,65,-65,-67,-69,-70,-71,35,-87,-88,35,65,-30,65,65,65,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-66,-68,-86,65,-64,-29,35,-64,35,-72,-73,-74,-75,-76,-77,65,65,65,65,65,65,65,65,-89,35,-61,35,-62,65,65,65,-64,35,35,-63,65,65,]),'FLOAT_LITERAL':([21,22,23,25,30,35,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[36,36,36,36,36,79,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'BOOL_LITERAL':([21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'CHAR_LITERAL':([21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'NOT':([21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RPAREN':([23,32,34,36,37,38,39,41,42,45,46,47,50,51,55,57,58,59,60,61,62,78,79,80,81,82,83,87,88,89,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,132,135,139,146,149,150,164,],[46,-60,-65,-67,-69,-70,-71,-87,-88,83,-30,-32,-24,-24,-46,-48,-49,-50,-51,-52,-53,-66,-68,-86,119,-64,-29,124,-23,-26,128,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,-31,-62,-47,-25,-64,-27,-28,-63,]),'IF':([28,63,86,142,144,147,153,154,155,156,157,158,160,166,169,173,174,178,179,181,183,],[-4,-18,-19,162,-16,-17,162,-36,-37,-38,-39,-40,-42,162,-41,162,162,-44,-45,162,-43,]),'WHILE':([28,63,86,142,144,147,153,154,155,156,157,158,160,166,169,173,174,178,179,181,183,],[-4,-18,-19,163,-16,-17,163,-36,-37,-38,-39,-40,-42,163,-41,163,163,-44,-45,163,-43,]),'RBRACE':([28,63,86,144,147,151,152,153,154,155,156,157,158,160,168,169,172,176,177,178,179,182,183,],[-4,-18,-19,-16,-17,167,-33,-35,-36,-37,-38,-39,-40,-42,-34,-41,175,178,179,-44,-45,183,-43,]),'IMPORT':([29,],[52,]),'INT_TYPE':([31,48,56,98,138,140,141,],[57,57,100,100,57,57,57,]),'FLOAT_TYPE':([31,48,56,98,138,140,141,],[58,58,101,101,58,58,58,]),'STRING_TYPE':([31,48,56,98,138,140,141,],[59,59,102,102,59,59,59,]),'BOOL_TYPE':([31,48,56,98,138,140,141,],[60,60,103,103,60,60,60,]),'VOID_TYPE':([31,48,56,98,138,140,141,],[61,61,104,104,61,61,61,]),'CHAR_TYPE':([31,48,138,140,141,],[62,62,62,62,62,]),'SEMICOLON':([32,33,34,36,37,38,39,41,42,46,49,55,57,58,59,60,61,62,78,79,80,82,83,93,94,95,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,135,137,143,146,148,159,164,],[-60,63,-65,-67,-69,-70,-71,-87,-88,-30,86,-46,-48,-49,-50,-51,-52,-53,-66,-68,-86,-64,-29,129,130,-8,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,-62,144,-47,147,-7,-64,165,169,-63,]),'PLUS':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,64,-65,-67,-69,-70,-71,-87,-88,64,-30,64,64,64,-66,-68,-86,64,-64,-29,-64,-72,-73,-74,-75,-76,-77,64,64,64,64,64,64,64,64,-89,-61,-62,64,64,64,-64,-63,64,64,]),'TIMES':([32,33,34,36,37,38,39,41,42,44,46,47,49,52,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,66,-65,-67,-69,-70,-71,-87,-88,66,-30,66,66,94,66,-66,-68,-86,66,-64,-29,-64,66,66,-74,-75,-76,-77,66,66,66,66,66,66,66,66,-89,-61,-62,66,66,66,-64,-63,66,66,]),'DIVIDE':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,67,-65,-67,-69,-70,-71,-87,-88,67,-30,67,67,67,-66,-68,-86,67,-64,-29,-64,67,67,-74,-75,-76,-77,67,67,67,67,67,67,67,67,-89,-61,-62,67,67,67,-64,-63,67,67,]),'MOD':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,68,-65,-67,-69,-70,-71,-87,-88,68,-30,68,68,68,-66,-68,-86,68,-64,-29,-64,68,68,-74,-75,-76,-77,68,68,68,68,68,68,68,68,-89,-61,-62,68,68,68,-64,-63,68,68,]),'POWER':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,69,-65,-67,-69,-70,-71,-87,-88,69,-30,69,69,69,-66,-68,-86,69,-64,-29,-64,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-89,-61,-62,69,69,69,-64,-63,69,69,]),'EQUAL':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,70,-65,-67,-69,-70,-71,-87,-88,70,-30,70,70,70,-66,-68,-86,70,-64,-29,-64,-72,-73,-74,-75,-76,-77,None,None,-80,-81,-82,-83,70,70,-89,-61,-62,70,70,70,-64,-63,70,70,]),'NOT_EQUAL':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,71,-65,-67,-69,-70,-71,-87,-88,71,-30,71,71,71,-66,-68,-86,71,-64,-29,-64,-72,-73,-74,-75,-76,-77,None,None,-80,-81,-82,-83,71,71,-89,-61,-62,71,71,71,-64,-63,71,71,]),'GREATER_THAN':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,72,-65,-67,-69,-70,-71,-87,-88,72,-30,72,72,72,-66,-68,-86,72,-64,-29,-64,-72,-73,-74,-75,-76,-77,72,72,None,None,None,None,72,72,-89,-61,-62,72,72,72,-64,-63,72,72,]),'GREATER_THAN_EQUAL':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,73,-65,-67,-69,-70,-71,-87,-88,73,-30,73,73,73,-66,-68,-86,73,-64,-29,-64,-72,-73,-74,-75,-76,-77,73,73,None,None,None,None,73,73,-89,-61,-62,73,73,73,-64,-63,73,73,]),'LESS_THAN':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,74,-65,-67,-69,-70,-71,-87,-88,74,-30,74,74,74,-66,-68,-86,74,-64,-29,-64,-72,-73,-74,-75,-76,-77,74,74,None,None,None,None,74,74,-89,-61,-62,74,74,74,-64,-63,74,74,]),'LESS_THAN_EQUAL':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,75,-65,-67,-69,-70,-71,-87,-88,75,-30,75,75,75,-66,-68,-86,75,-64,-29,-64,-72,-73,-74,-75,-76,-77,75,75,None,None,None,None,75,75,-89,-61,-62,75,75,75,-64,-63,75,75,]),'AND':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,76,-65,-67,-69,-70,-71,-87,-88,76,-30,76,76,76,-66,-68,-86,76,-64,-29,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,76,-89,-61,-62,76,76,76,-64,-63,76,76,]),'OR':([32,33,34,36,37,38,39,41,42,44,46,47,49,53,78,79,80,81,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,133,136,137,146,164,170,171,],[-60,77,-65,-67,-69,-70,-71,-87,-88,77,-30,77,77,77,-66,-68,-86,77,-64,-29,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,-62,77,77,77,-64,-63,77,77,]),'RSQUARE':([32,34,36,37,38,39,41,42,44,46,53,78,79,80,82,83,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,134,136,145,146,164,],[-60,-65,-67,-69,-70,-71,-87,-88,82,-30,96,-66,-68,-86,-64,-29,-64,135,-55,-56,-57,-58,-59,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,-62,145,146,-54,-64,-63,]),'COMMA':([32,34,36,37,38,39,41,42,46,47,55,57,58,59,60,61,62,78,79,80,82,83,89,95,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,132,135,146,149,150,164,],[-60,-65,-67,-69,-70,-71,-87,-88,-30,84,-46,-48,-49,-50,-51,-52,-53,-66,-68,-86,-64,-29,125,131,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,-62,-47,-64,-27,-28,-63,]),'LBRACE':([32,34,36,37,38,39,41,42,46,55,57,58,59,60,61,62,78,79,80,82,83,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,128,132,135,146,148,164,170,171,180,],[-60,-65,-67,-69,-70,-71,-87,-88,-30,-46,-48,-49,-50,-51,-52,-53,-66,-68,-86,-64,-29,-64,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-89,-61,142,-62,-47,-64,166,-63,173,174,181,]),'ELSE':([178,],[180,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main_block_sequence':([0,3,],[2,19,]),'main_block':([0,3,],[3,3,]),'constant_declaration':([0,3,142,153,166,173,174,181,],[4,4,154,154,154,154,154,154,]),'variable_declaration':([0,3,142,153,166,173,174,181,],[5,5,155,155,155,155,155,155,]),'var_const_update':([0,3,142,153,166,173,174,181,],[6,6,156,156,156,156,156,156,]),'function_declaration':([0,3,],[7,7,]),'main_function':([0,3,],[8,8,]),'comment':([0,3,142,153,166,173,174,181,],[9,9,160,160,160,160,160,160,]),'import_statement':([0,3,],[10,10,]),'arrayaccess':([0,3,21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,142,153,162,163,166,173,174,181,],[14,14,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,14,14,42,42,14,14,14,14,]),'function_call':([0,3,21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,142,153,162,163,166,173,174,181,],[18,18,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,159,159,41,41,159,159,159,159,]),'expression':([21,22,23,25,30,40,43,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,97,120,123,162,163,],[33,44,47,49,53,80,81,105,106,107,108,109,110,111,112,113,114,115,116,117,118,47,133,136,137,170,171,]),'function_param_list_call':([23,84,],[45,122,]),'types':([31,48,138,140,141,],[54,85,148,149,150,]),'defaulttype':([31,48,138,140,141,],[55,55,55,55,55,]),'function_param_list':([50,51,],[87,92,]),'function_param_list_aux':([50,51,125,],[88,88,139,]),'parameter':([50,51,125,],[89,89,89,]),'ID_LIST':([52,131,],[93,143,]),'arraytype':([56,98,],[99,134,]),'arrayaccess2':([82,96,146,],[121,132,164,]),'function_body':([142,166,],[151,172,]),'block_sequence':([142,153,166,173,174,181,],[152,168,152,176,177,182,]),'block':([142,153,166,173,174,181,],[153,153,153,153,153,153,]),'if_block':([142,153,166,173,174,181,],[157,157,157,157,157,157,]),'while_block':([142,153,166,173,174,181,],[158,158,158,158,158,158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main_block_sequence','program',1,'p_program','rules.py',123),
  ('main_block_sequence -> main_block main_block_sequence','main_block_sequence',2,'p_main_block_sequence','rules.py',128),
  ('main_block_sequence -> main_block','main_block_sequence',1,'p_main_block_sequence','rules.py',129),
  ('comment -> COMMENT STRING_LITERAL','comment',2,'p_comment','rules.py',136),
  ('import_statement -> FROM STRING_LITERAL IMPORT ID_LIST SEMICOLON','import_statement',5,'p_import_statement','rules.py',140),
  ('import_statement -> FROM STRING_LITERAL IMPORT TIMES SEMICOLON','import_statement',5,'p_import_statement','rules.py',141),
  ('ID_LIST -> ID COMMA ID_LIST','ID_LIST',3,'p_id_list','rules.py',148),
  ('ID_LIST -> ID','ID_LIST',1,'p_id_list','rules.py',149),
  ('main_block -> constant_declaration','main_block',1,'p_main_block','rules.py',157),
  ('main_block -> variable_declaration','main_block',1,'p_main_block','rules.py',158),
  ('main_block -> var_const_update','main_block',1,'p_main_block','rules.py',159),
  ('main_block -> function_declaration','main_block',1,'p_main_block','rules.py',160),
  ('main_block -> main_function','main_block',1,'p_main_block','rules.py',161),
  ('main_block -> comment','main_block',1,'p_main_block','rules.py',162),
  ('main_block -> import_statement','main_block',1,'p_main_block','rules.py',163),
  ('constant_declaration -> VAL ID COLON types ASSIGN expression SEMICOLON','constant_declaration',7,'p_constant_declaration','rules.py',170),
  ('variable_declaration -> VAR ID COLON types ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','rules.py',175),
  ('var_const_update -> ID ASSIGN expression SEMICOLON','var_const_update',4,'p_var_const_update','rules.py',180),
  ('var_const_update -> arrayaccess ASSIGN expression SEMICOLON','var_const_update',4,'p_var_const_update','rules.py',181),
  ('function_declaration -> FUNCTION ID LPAREN function_param_list RPAREN COLON types SEMICOLON','function_declaration',8,'p_function_declaration','rules.py',186),
  ('function_declaration -> FUNCTION ID LPAREN function_param_list RPAREN COLON types LBRACE function_body RBRACE','function_declaration',10,'p_function_declaration','rules.py',187),
  ('main_function -> FUNCTION MAIN LPAREN function_param_list RPAREN LBRACE function_body RBRACE','main_function',8,'p_main_function','rules.py',194),
  ('function_param_list -> function_param_list_aux','function_param_list',1,'p_function_param_list','rules.py',198),
  ('function_param_list -> <empty>','function_param_list',0,'p_function_param_list','rules.py',199),
  ('function_param_list_aux -> parameter COMMA function_param_list_aux','function_param_list_aux',3,'p_function_param_list_aux','rules.py',206),
  ('function_param_list_aux -> parameter','function_param_list_aux',1,'p_function_param_list_aux','rules.py',207),
  ('parameter -> VAL ID COLON types','parameter',4,'p_parameter','rules.py',217),
  ('parameter -> VAR ID COLON types','parameter',4,'p_parameter','rules.py',218),
  ('function_call -> ID LPAREN function_param_list_call RPAREN','function_call',4,'p_function_call','rules.py',227),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','rules.py',228),
  ('function_param_list_call -> expression COMMA function_param_list_call','function_param_list_call',3,'p_function_param_list_call','rules.py',237),
  ('function_param_list_call -> expression','function_param_list_call',1,'p_function_param_list_call','rules.py',238),
  ('function_body -> block_sequence','function_body',1,'p_function_body','rules.py',249),
  ('block_sequence -> block block_sequence','block_sequence',2,'p_block_sequence','rules.py',254),
  ('block_sequence -> block','block_sequence',1,'p_block_sequence','rules.py',255),
  ('block -> constant_declaration','block',1,'p_block','rules.py',262),
  ('block -> variable_declaration','block',1,'p_block','rules.py',263),
  ('block -> var_const_update','block',1,'p_block','rules.py',264),
  ('block -> if_block','block',1,'p_block','rules.py',265),
  ('block -> while_block','block',1,'p_block','rules.py',266),
  ('block -> function_call SEMICOLON','block',2,'p_block','rules.py',267),
  ('block -> comment','block',1,'p_block','rules.py',268),
  ('if_block -> IF expression LBRACE block_sequence RBRACE ELSE LBRACE block_sequence RBRACE','if_block',9,'p_if_block','rules.py',274),
  ('if_block -> IF expression LBRACE block_sequence RBRACE','if_block',5,'p_if_block','rules.py',275),
  ('while_block -> WHILE expression LBRACE block_sequence RBRACE','while_block',5,'p_while_block','rules.py',283),
  ('types -> defaulttype','types',1,'p_types','rules.py',288),
  ('types -> LSQUARE arraytype RSQUARE','types',3,'p_types','rules.py',289),
  ('defaulttype -> INT_TYPE','defaulttype',1,'p_defaultype','rules.py',296),
  ('defaulttype -> FLOAT_TYPE','defaulttype',1,'p_defaultype','rules.py',297),
  ('defaulttype -> STRING_TYPE','defaulttype',1,'p_defaultype','rules.py',298),
  ('defaulttype -> BOOL_TYPE','defaulttype',1,'p_defaultype','rules.py',299),
  ('defaulttype -> VOID_TYPE','defaulttype',1,'p_defaultype','rules.py',300),
  ('defaulttype -> CHAR_TYPE','defaulttype',1,'p_defaultype','rules.py',301),
  ('arraytype -> LSQUARE arraytype RSQUARE','arraytype',3,'p_arraytype','rules.py',305),
  ('arraytype -> INT_TYPE','arraytype',1,'p_arraytype','rules.py',306),
  ('arraytype -> FLOAT_TYPE','arraytype',1,'p_arraytype','rules.py',307),
  ('arraytype -> STRING_TYPE','arraytype',1,'p_arraytype','rules.py',308),
  ('arraytype -> BOOL_TYPE','arraytype',1,'p_arraytype','rules.py',309),
  ('arraytype -> VOID_TYPE','arraytype',1,'p_arraytype','rules.py',310),
  ('expression -> ID','expression',1,'p_identifier','rules.py',318),
  ('arrayaccess -> ID LSQUARE expression RSQUARE arrayaccess2','arrayaccess',5,'p_arrayaccess','rules.py',323),
  ('arrayaccess -> function_call LSQUARE expression RSQUARE arrayaccess2','arrayaccess',5,'p_arrayaccess','rules.py',324),
  ('arrayaccess2 -> LSQUARE expression RSQUARE arrayaccess2','arrayaccess2',4,'p_arrayaccess2','rules.py',331),
  ('arrayaccess2 -> <empty>','arrayaccess2',0,'p_arrayaccess2','rules.py',332),
  ('expression -> INTEGER_LITERAL','expression',1,'p_integer_literal','rules.py',342),
  ('expression -> MINUS INTEGER_LITERAL','expression',2,'p_integer_literal','rules.py',343),
  ('expression -> FLOAT_LITERAL','expression',1,'p_float_literal','rules.py',350),
  ('expression -> MINUS FLOAT_LITERAL','expression',2,'p_float_literal','rules.py',351),
  ('expression -> STRING_LITERAL','expression',1,'p_string_literal','rules.py',358),
  ('expression -> BOOL_LITERAL','expression',1,'p_bool_literal','rules.py',362),
  ('expression -> CHAR_LITERAL','expression',1,'p_char_literal','rules.py',366),
  ('expression -> expression PLUS expression','expression',3,'p_expression','rules.py',370),
  ('expression -> expression MINUS expression','expression',3,'p_expression','rules.py',371),
  ('expression -> expression TIMES expression','expression',3,'p_expression','rules.py',372),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','rules.py',373),
  ('expression -> expression MOD expression','expression',3,'p_expression','rules.py',374),
  ('expression -> expression POWER expression','expression',3,'p_expression','rules.py',375),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','rules.py',376),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','rules.py',377),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','rules.py',378),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','rules.py',379),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','rules.py',380),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','rules.py',381),
  ('expression -> expression AND expression','expression',3,'p_expression','rules.py',382),
  ('expression -> expression OR expression','expression',3,'p_expression','rules.py',383),
  ('expression -> NOT expression','expression',2,'p_expression','rules.py',384),
  ('expression -> function_call','expression',1,'p_expression','rules.py',385),
  ('expression -> arrayaccess','expression',1,'p_expression','rules.py',386),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','rules.py',387),
]
